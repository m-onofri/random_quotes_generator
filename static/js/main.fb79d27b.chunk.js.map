{"version":3,"sources":["Main.js","Button.js","Nav.js","Start.js","App.js","serviceWorker.js","index.js"],"names":["Main","_this$props","this","props","selectedQuote","image","selectedImage","url","react_default","a","createElement","console","log","id","style","backgroundImage","class","quote","author","Component","Button","value","changeQuote","onClick","e","className","Nav","src_Button","Start","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","randomChoice","array","Math","floor","random","length","checkNoRepeat","state","obj","quoteSelection","btn","CAT_QUOTES","DOG_QUOTES","selectURL","active","color","bind","assertThisInitialized","target","COLORS","fetch","response","json","setState","src_Main","src_Start","src_Nav","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fb79d27b.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nclass Main extends Component {\n  render() {\n    const {selectedQuote, selectedImage} = this.props;\n    const image = selectedImage[0].url;\n    return (\n      <main>\n        {console.log(image)}\n        <div\n          id=\"img\"\n          style={{backgroundImage: \"url(\" + image + \")\"}}\n        >\n          <div id=\"quotes\">\n            <h3 class=\"quote\">{selectedQuote.quote}</h3>\n            <h4 class=\"author\">{selectedQuote.author}</h4>\n          </div>\n        </div>\n\n      </main>\n    );\n  }\n}\n\nexport default Main;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nclass Button extends Component {\n  render() {\n    const {id, value, changeQuote} = this.props;\n    return (\n      <div onClick={(e) => changeQuote(e)} className=\"btn\" id={id}>{value}</div>\n    );\n  }\n}\n\nButton.propTypes = {\n  id: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired\n}\nexport default Button;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport Button from './Button.js';\n\nclass Nav extends Component {\n  render() {\n    const {changeQuote} = this.props;\n    return (\n      <nav>\n        <Button changeQuote={changeQuote} id=\"cat_button\" value=\"cat's  quotes\" />\n        <Button changeQuote={changeQuote} id=\"random_button\" value=\"random quotes\" />\n        <Button changeQuote={changeQuote} id=\"dog_button\" value=\"dog's  quotes\"/>\n      </nav>\n    );\n  }\n}\n\nexport default Nav;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nclass Start extends Component {\n  render() {\n    return (\n      <main>\n        <h1>are you a cat or a dog person?</h1>\n        <h2>chose and click a button…</h2>\n      </main>\n    );\n  }\n}\n\nexport default Start;\n","import React, { Component } from 'react';\nimport Main from './Main.js';\nimport Nav from './Nav.js';\nimport Start from './Start.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: false,\n      quote: {id: 0, quote: \"\"},\n      color: {id: 0, color: '#AFAFAF'},\n      image: []\n    }\n    this.changeQuote = this.changeQuote.bind(this);\n  }\n\n\n\n  randomChoice = (array) => {\n    return array[Math.floor(Math.random() * array.length)];\n  }\n\n  checkNoRepeat = (array, state) => {\n    let obj;\n    do {\n      obj = this.randomChoice(array);\n    } while (obj.id === state.id);\n    return obj;\n  }\n\n  quoteSelection = (btn) => {\n    switch(btn) {\n      case 'cat_button':\n        return this.checkNoRepeat(CAT_QUOTES, this.state.quote);\n      case 'dog_button':\n        return this.checkNoRepeat(DOG_QUOTES, this.state.quote);\n      case 'random_button':\n        return this.checkNoRepeat(this.randomChoice([CAT_QUOTES, DOG_QUOTES]), this.state.quote);\n    }\n  };\n\n  selectURL = (btn) => {\n    return btn === 'cat_button' ? 'https://api.thecatapi.com/v1/images/search?mime_types=jpg,png' : 'https://api.thedogapi.com/v1/images/search?mime_types=jpg,png'\n  }\n\n  async changeQuote(e) {\n    let btn = e.target.id;\n    if (btn === 'random_button') btn = this.randomChoice(['cat_button', 'dog_button']);\n    const quote = this.quoteSelection(btn);\n    const color = this.checkNoRepeat(COLORS, this.state.color);\n    const url = this.selectURL(btn);\n\n    let response = await fetch(url);\n    let image = await response.json();\n\n    await this.setState({\n      active: true,\n      quote: quote,\n      color: color,\n      image: image\n    });\n  }\n\n  render() {\n    return (\n      <div\n        id=\"main_container\">\n        <div id=\"sub_container\">\n          {!this.state.active ? <Start /> : <Main\n                                              selectedImage={this.state.image}\n                                              selectedQuote={this.state.quote}\n                                            />}\n          <Nav\n            changeQuote={this.changeQuote}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst CAT_QUOTES = [\n{id: 1,\n author: 'Charles Dickens',\n quote: \"What greater gift than the love of a cat.\"},\n{id: 2,\n author: \"Albert Schweitzer\",\n quote: \"There are two means of refuge from the miseries of life: music and cats.\"},\n{id: 3,\n author: \"Theophile Gautier\",\n quote: \"A cat will be your friend, but never your slave.\"},\n{id: 4,\n author: \"Nan Porter\",\n quote: \"If cats could talk, they wouldnít.\"},\n{id: 5,\n author: \"Rod McKuen\",\n quote:\"Cats have it all: admiration, an endless sleep, and company only when they want it.\"},\n{id: 6,\n author: \"Unknown\",\n quote: \"People who don't like cats were probably mice in an earlier life.\"},\n{id: 7,\n author: \"Tay Hohoff\",\n quote: \"There are few things in life more heartwarming than to be welcomed by a cat.\"},\n{id: 8,\n author: \"W.L. George\",\n quote: \"Cats know how to obtain food without labor, shelter without confinement, and love without penalties.\"},\n{id: 9,\n author: \"Terry Pratchett\",\n quote: \"In ancient times cats were worshipped as gods; they have not forgotten this.\"},\n{id: 10,\n author: \"Ernest Hemingway\",\n quote: \"A cat has absolute emotional honesty: human beings, for one reason or another, may hide their feelings, but a cat does not.\"}\n];\n\nconst DOG_QUOTES = [\n{id: 11,\n author: \"Robert Wagner\",\n quote: \"A dog will teach you unconditional love. If you can have that in your life, things won't be too bad.\"},\n{id: 12,\n author: \"Duane Chapman\",\n quote: \"Dog is God spelled backward.\"},\n{id: 13,\n author: \"Charles de Gaulle\",\n quote: \"The better I get to know men, the more I find myself loving dogs.\"},\n{id: 14,\n author: \"Mark Twain\",\n quote: \"The dog is a gentleman; I hope to go to his heaven not mans.\"},\n{id: 15,\n author: \"W.R. Purche\",\n quote: \"Everyone thinks they have the best dog. And none of them are wrong.\"},\n{id: 16,\n author: \"Agnes Turnbull\",\n quote: \"Dog's lives are too short. Their only fault, really.\"},\n{id: 17,\n author: \"Robert Benchley\",\n quote: \"A dog teaches a boy fidelity, perseverance, and to turn around three times before lying down.\"},\n{id: 18,\n author: \"Robert Louis\",\n quote: \"You think dogs will not be in heaven? I tell you, they will be there long before any of us.\"},\n{id: 19,\n author: \"Josh Billings\",\n quote: \"A dog is the only thing on earth that loves you more than he loves himself.\"},\n{id: 20,\n author: \"Aldous Huxley\",\n quote: \"To his dog, every man is Napolean, hence the constant popularity of dogs.\"}\n];\n\nconst COLORS = [\n  {id: 1, color: \"#ED5A3D\"},\n  {id: 2, color: \"#FF4A4A\"},\n  {id: 3, color: \"#FAE01C\"},\n  {id: 4, color: \"#FFCA54\"},\n  {id: 5, color: \"#58ED08\"},\n  {id: 6, color: \"#FF0066\"},\n  {id: 7, color: \"#FBB892\"},\n  {id: 8, color: \"#A4EF33\"},\n  {id: 9, color: \"#D31996\"},\n  {id: 10, color: \"#FD7212\"}\n];\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}